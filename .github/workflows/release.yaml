on:
  push:
    tags:
      - v*

permissions:
#  actions: read|write|none
#  checks: read|write|none
  contents: write
#  deployments: read|write|none
#  id-token: read|write|none
#  issues: read|write|none
#  discussions: read|write|none
#  packages: read|write|none
#  pages: read|write|none
#  pull-requests: read|write|none
#  repository-projects: read|write|none
#  security-events: read|write|none
#  statuses: read|write|none

env:
  FLUTTER_VERSION: '3.19.5'

jobs:
  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1
      - uses: subosito/flutter-action@v2
        with:
          cache: true
          flutter-version: ${{ env.FLUTTER_VERSION  }}

      - name: Set up semantic version environment var
        run: |
          TAG_NAME=$(echo ${GITHUB_REF#refs/tags/v})
          echo "SEMANTIC_VERSION=$TAG_NAME" >> $GITHUB_ENV
        shell: bash

      - name: Update version number
        run: |
          choco install sed make yq -y
          yq -i ".version |= \"${SEMANTIC_VERSION}+\"" pubspec.yaml
          yq -i '.version += strenv(GITHUB_RUN_NUMBER)' pubspec.yaml
        shell: bash

      - name: Build Windows Executable
        run: |
          flutter upgrade
          flutter pub get
          flutter config --enable-windows-desktop
          dart pub global activate flutter_distributor
          make innoinstall
          flutter_distributor package --platform=windows --targets=exe --skip-clean
          mv dist/**/linkwarden_mobile-*-windows-setup.exe dist/linkwarden_mobile-windows-x86_64-setup.exe
          flutter_distributor package --platform=windows --targets=msix --skip-clean
          mv dist/**/linkwarden_mobile-*-windows.msix dist/linkwarden_mobile-windows-x86_64-setup.msix
          flutter_distributor package --platform=windows --targets=zip --skip-clean
          mv dist/**/linkwarden_mobile-*-windows.zip dist/linkwarden_mobile-windows-x86_64.zip

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: linkwarden_mobile-Release-Binaries
          path: dist/
          retention-days: 1

  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1
      - uses: subosito/flutter-action@v2
        with:
          cache: true
          flutter-version: ${{ env.FLUTTER_VERSION  }}

      - name: Install Dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y tar clang cmake ninja-build pkg-config libgtk-3-dev make python3-pip python3-setuptools desktop-file-utils libgdk-pixbuf2.0-dev fakeroot strace fuse libunwind-dev locate patchelf gir1.2-appindicator3-0.1 libappindicator3-1 libappindicator3-dev libsecret-1-0 libjsoncpp25 libsecret-1-dev libjsoncpp-dev libnotify-bin libnotify-dev mpv libmpv-dev libsecret-1-dev libjsoncpp-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev appstream libarchive-tools 

      - name: Install AppImage Tool
        run: |
          wget -O appimagetool "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
          chmod +x appimagetool
          mv appimagetool /usr/local/bin/

      - name: Set up semantic version environment var
        run: |
          TAG_NAME=$(echo ${GITHUB_REF#refs/tags/v})
          echo "SEMANTIC_VERSION=$TAG_NAME" >> $GITHUB_ENV

      - name: Update version number
        run: |
          curl -sS https://webi.sh/yq | sh
          yq -i ".version |= \"${SEMANTIC_VERSION}+\"" pubspec.yaml
          yq -i '.version += strenv(GITHUB_RUN_NUMBER)' pubspec.yaml

      - name: Build Linux Packages
        run: |
          flutter upgrade
          flutter pub get
          dart pub global activate flutter_distributor
          flutter_distributor package --platform=linux --targets=deb
          flutter_distributor package --platform=linux --targets=appimage
          flutter_distributor package --platform=linux --targets=rpm
          flutter_distributor package --platform=linux --targets=pacman
          flutter_distributor package --platform=linux --targets=zip

      - name: Move Files to dist
        run: |
          mv dist/**/linkwarden_mobile-*-linux.deb dist/linkwarden_mobile-linux-x86_64.deb
          mv dist/**/linkwarden_mobile-*-linux.rpm dist/linkwarden_mobile-linux-x86_64.rpm
          mv dist/**/linkwarden_mobile-*-linux.AppImage dist/linkwarden_mobile-linux-x86_64.AppImage
          mv dist/**/linkwarden_mobile-*-linux.pkg dist/linkwarden_mobile-linux-x86_64.pkg
          mv dist/**/linkwarden_mobile-*-linux.zip dist/linkwarden_mobile-linux-x86_64.zip

      - uses: actions/upload-artifact@v3
        with:
          name: linkwarden_mobile-Release-Binaries
          path: dist/
          retention-days: 1

  android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1
      - uses: subosito/flutter-action@v2
        with:
          cache: true
          flutter-version: ${{ env.FLUTTER_VERSION  }}

      - name: Install Dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev make python3-pip python3-setuptools patchelf desktop-file-utils libgdk-pixbuf2.0-dev fakeroot strace fuse xmlstarlet libsecret-1-dev libjsoncpp-dev

      - name: Set up semantic version environment var
        run: |
          TAG_NAME=$(echo ${GITHUB_REF#refs/tags/v})
          echo "SEMANTIC_VERSION=$TAG_NAME" >> $GITHUB_ENV

      - name: Update version number
        run: |
          curl -sS https://webi.sh/yq | sh
          yq -i ".version |= \"${SEMANTIC_VERSION}+\"" pubspec.yaml
          yq -i '.version += strenv(GITHUB_RUN_NUMBER)' pubspec.yaml

      - name: Build Apk
        run: |
          flutter upgrade
          flutter pub get
          flutter build apk
          flutter build appbundle
          mv build/app/outputs/apk/release/app-release.apk build/linkwarden_mobile-android-all-arch.apk
          mv build/app/outputs/bundle/release/app-release.aab build/linkwarden_mobile-playstore-all-arch.aab

      - uses: actions/upload-artifact@v3
        with:
          name: linkwarden_mobile-Release-Binaries
          path: |
            build/linkwarden_mobile-android-all-arch.apk
            build/linkwarden_mobile-playstore-all-arch.aab
          retention-days: 1

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1
      - uses: subosito/flutter-action@v2
        with:
          cache: true
          flutter-version: ${{ env.FLUTTER_VERSION  }}

     # - name: Install Apple Certificate
     #   uses: apple-actions/import-codesign-certs@v1
     #   with:
     #     p12-file-base64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
     #     p12-password: ${{ secrets.P12_PASSWORD }}
     #     keychain-password: ${{ secrets.KEYCHAIN_PASSWORD }}
#
      #- name: Install the provisioning profile
      #  env:
      #    BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
      #  run: |
      #    # create variables
      #    PP_PATH=$RUNNER_TEMP/build_pp.provisionprofile
#
      #    # import certificate and provisioning profile from secrets
      #    echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH
#
      #    # apply provisioning profile
      #    mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
      #    cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Set up semantic version environment var
        run: |
          TAG_NAME=$(echo ${GITHUB_REF#refs/tags/v})
          echo "SEMANTIC_VERSION=$TAG_NAME" >> $GITHUB_ENV

      - name: Update version number
        run: |
          brew install yq
          yq -i ".version |= \"${SEMANTIC_VERSION}+\"" pubspec.yaml
          yq -i '.version += strenv(GITHUB_RUN_NUMBER)' pubspec.yaml

      - name: Build Macos App
        run: |
          flutter upgrade
          flutter pub get
          flutter config --enable-macos-desktop
          flutter build macos
          du -sh build/macos/Build/Products/Release/*

      - name: Package Macos App
        run: |
          python3 -m pip install --break-system-packages setuptools
          npm install --break-system-packages -g appdmg
          mkdir -p build/${{ env.BUILD_VERSION }}
          appdmg appdmg.json build/linkwarden_mobile-macos-universal.dmg

#      - name: Clean up keychain and provisioning profile
#        if: ${{ always() }}
#        run: |
#          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
#          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.provisionprofile

      - uses: actions/upload-artifact@v3
        with:
          name: linkwarden_mobile-Release-Binaries
          path: |
            build/linkwarden_mobile-macos-universal.dmg
          retention-days: 1

  upload:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs:
      - windows
      - linux
      - android
      - macos
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: linkwarden_mobile-Release-Binaries
          path: ./linkwarden_mobile-Release-Binaries

      - name: Install dependencies
        run: sudo apt-get install tree -y

      - name: Generate Checksums
        run: |
          tree .
          md5sum linkwarden_mobile-Release-Binaries/* >> RELEASE.md5sum
          sha256sum linkwarden_mobile-Release-Binaries/* >> RELEASE.sha256sum
          sed -i 's|linkwarden_mobile-Release-Binaries/||' RELEASE.sha256sum RELEASE.md5sum

      - uses: actions/upload-artifact@v3
        with:
          name: linkwarden_mobile-Release-Binaries
          path: |
            RELEASE.md5sum
            RELEASE.sha256sum
          retention-days: 1

      - name: Upload Release Binaries (stable)
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          omitPrereleaseDuringUpdate: true
          allowUpdates: true
          artifacts: linkwarden_mobile-Release-Binaries/*,RELEASE.sha256sum,RELEASE.md5sum
